# ----------------------------------------------------------------------------
# Created By  : Sebastian Widmann and Alvaro Pay Lozano
# Institution : TU Munich, Department of Aerospace and Geodesy
# Created Date: June 16, 2022
# version ='2.0'
# ---------------------------------------------------------------------------
"""
Class implementation to generate background mesh with blockMesh. Background
mesh is specified by base cell size and blockMeshDict will be written into
the "/system" directory.
"""
# ---------------------------------------------------------------------------

import os

from scripts.flowProperties import *

class generateSnappyHexMeshDict(object):
    def __init__(self, caseDir, bluff, mach, baseCellSize, meshing):
        self.caseDir = caseDir
        self.bluff = bluff
        self.mach = mach
        self.baseCellSize = baseCellSize
        self.meshing = meshing

        self.writeToFile()

    def writeToFile(self):
        saveDir = os.path.join(self.caseDir, 'system/snappyHexMeshDict')
        f = open(saveDir, 'w+')

        f.write('/*--------------------------------*- C++ -*----------------------------------*\\   \n')
        f.write('| =========                 |                                                 |    \n')
        f.write('| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |  \n')
        f.write('|  \\\\    /   O peration     | Version:  v2206                                 |  \n')
        f.write('|   \\\\  /    A nd           | Website:  www.openfoam.com                      |  \n')
        f.write('|    \\\\/     M anipulation  |                                                 |  \n')
        f.write('\\*---------------------------------------------------------------------------*/   \n')
        f.write('FoamFile                                                                           \n')
        f.write('{                                                                                  \n')
        f.write('    version     2.0;                                                               \n')
        f.write('    format      ascii;                                                             \n')
        f.write('    class       dictionary;                                                        \n')
        f.write('    object      snappyHexMeshDict;                                                 \n')
        f.write('}                                                                                  \n')
        f.write('// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //    \n')
        f.write('                                                                                   \n')
        if self.meshing == 0:
            f.write('castellatedMesh    true;                                                       \n')
            f.write('snap               false;                                                      \n')
            f.write('addLayers          false;                                                      \n')
        elif self.meshing == 1:
            f.write('mergePatchFaces    false;                                                       \n')
            f.write('castellatedMesh    true;                                                       \n')
            f.write('snap               true;                                                       \n')
            f.write('addLayers          false;                                                      \n')
        elif self.meshing == 2:
            f.write('castellatedMesh    false;                                                      \n')
            f.write('snap               false;                                                      \n')
            f.write('addLayers          true;                                                       \n')
        f.write('                                                                                   \n')
        f.write('geometry                                                                           \n')
        f.write('{                                                                                  \n')
        f.write('   bluff{}.stl \n'.format(self.bluff))
        f.write('   {                                                                               \n')
        f.write('       type    triSurfaceMesh;                                                     \n')
        f.write('       name    wing;                                                               \n')
        f.write('   }                                                                               \n')
        f.write('                                                                                   \n')
        f.write('   refinementBox5                                                                  \n')
        f.write('   {                                                                               \n')
        f.write('       type    box;                                                                \n')
        f.write('       min     (-0.35 -0.3 -0.5);                                                 \n')
        f.write('       max     ( 0.85  0.3 {}); \n'.format(-round(0.5 - (self.baseCellSize / 2**5), 9)))
        f.write('                                                                                   \n')
        f.write('   }                                                                               \n')
        f.write('   refinementBox4                                                                  \n')
        f.write('   {                                                                               \n')
        f.write('       type    box;                                                                \n')
        f.write('       min     (-0.5 -0.5 -0.5);                                                   \n')
        f.write('       max     ( 2    0.5 {}); \n'.format(-round(0.5 - (self.baseCellSize / 2**5), 9)))
        f.write('   }                                                                               \n')
        f.write('                                                                                   \n')
        f.write('   refinementBox3                                                                  \n')
        f.write('   {                                                                               \n')
        f.write('       type    box;                                                                \n')
        f.write('       min     (-1 -1 -0.5);                                                       \n')
        f.write('       max     ( 5  1 {}); \n'.format(-round(0.5 - (self.baseCellSize / 2**5), 9)))
        f.write('   }                                                                               \n')
        f.write('                                                                                   \n')
        f.write('   refinementBox2                                                                  \n')
        f.write('   {                                                                               \n')
        f.write('       type    box;                                                                \n')
        f.write('       min     (-2  -2 -0.5);                                                      \n')
        f.write('       max     ( 10  2 {}); \n'.format(-round(0.5 - (self.baseCellSize / 2**5), 9)))
        f.write('   }                                                                               \n')
        f.write('                                                                                   \n')
        f.write('   refinementBox1                                                                  \n')
        f.write('   {                                                                               \n')
        f.write('       type    box;                                                                \n')
        f.write('       min     (-5  -4 -0.5);                                                      \n')
        f.write('       max     ( 20  4 {}); \n'.format(-round(0.5 - (self.baseCellSize / 2**5), 9)))
        f.write('   }                                                                               \n')
        f.write('}                                                                                  \n')
        f.write('                                                                                   \n')
        f.write('castellatedMeshControls                                                            \n')
        f.write('{                                                                                  \n')
        f.write('   maxLocalCells           1e5;                                                    \n')
        f.write('   maxGlobalCells          2e6;                                                    \n')
        f.write('   minRefinementCells      10;                                                     \n')
        f.write('   nCellsBetweenLevels     5;                                                      \n')
        f.write('                                                                                   \n')
        f.write('   features                                                                        \n')
        f.write('   (                                                                               \n')
        if self.meshing == 1:
            f.write('       {                                                                       \n')
            f.write('           file            "bluff{}.eMesh"; \n'.format(self.bluff))
            f.write('           level           0;                                                  \n')
            f.write('       }                                                                       \n')
        f.write('   );                                                                              \n')
        f.write('                                                                                   \n')
        f.write('   refinementSurfaces                                                              \n')
        f.write('   {                                                                               \n')
        if self.meshing == 1:
            f.write('       wing                                                                    \n')
            f.write('       {                                                                       \n')
            if int(self.airfoil[-2:]) < 10:
                f.write('           level           (0 2);                                          \n')
            else:
                f.write('           level           (0 1);                                          \n')
            f.write('       }                                                                       \n')
        f.write('   }                                                                               \n')
        f.write('                                                                                   \n')
        f.write('   resolveFeatureAngle     15;                                                     \n')
        f.write('                                                                                   \n')
        f.write('   refinementRegions                                                               \n')
        f.write('   {                                                                               \n')
        f.write('                                                                                   \n')
        if self.meshing == 0:
            f.write('                                                                               \n')
            f.write('       refinementBox5                                                          \n')
            f.write('       {                                                                       \n')
            f.write('           mode    inside;                                                     \n')
            f.write('           levels  ((1e15 0));                                                 \n')
            f.write('           levelIncrement  (0 0 (5 5 0));                                      \n')
            f.write('       }                                                                       \n')
            f.write('                                                                               \n')
            f.write('       refinementBox4                                                          \n')
            f.write('       {                                                                       \n')
            f.write('           mode    inside;                                                     \n')
            f.write('           levels  ((1e15 0));                                                 \n')
            f.write('           levelIncrement  (0 0 (4 4 0));                                      \n')
            f.write('       }                                                                       \n')
            f.write('                                                                               \n')
            f.write('       refinementBox3                                                          \n')
            f.write('       {                                                                       \n')
            f.write('           mode    inside;                                                     \n')
            f.write('           levels  ((1e15 0));                                                 \n')
            f.write('           levelIncrement  (0 0 (3 3 0));                                      \n')
            f.write('       }                                                                       \n')
            f.write('                                                                               \n')
            f.write('       refinementBox2                                                          \n')
            f.write('       {                                                                       \n')
            f.write('           mode    inside;                                                     \n')
            f.write('           levels  ((1e15 0));                                                 \n')
            f.write('           levelIncrement  (0 0 (2 2 0));                                      \n')
            f.write('       }                                                                       \n')
            f.write('                                                                               \n')
            f.write('       refinementBox1                                                          \n')
            f.write('       {                                                                       \n')
            f.write('           mode    inside;                                                     \n')
            f.write('           levels  ((1e15 0));                                                 \n')
            f.write('           levelIncrement  (0 0 (1 1 0));                                      \n')
            f.write('       }                                                                       \n')
        f.write('   }                                                                               \n')
        f.write('                                                                                   \n')
        f.write('   locationInMesh (-7.4999 7.4999 -0.499);                                         \n')
        f.write('                                                                                   \n')
        f.write('   allowFreeStandingZoneFaces  false;                                              \n')
        f.write('}                                                                                  \n')
        f.write('                                                                                   \n')
        f.write('snapControls                                                                       \n')
        f.write('{                                                                                  \n')
        f.write('   nSmoothPatch                3;                                                  \n')
        f.write('   tolerance                   1.0;                                                \n')
        f.write('   nSolveIter                  30;                                                 \n')
        f.write('   nRelaxIter                  5;                                                  \n')
        f.write('                                                                                   \n')
        f.write('   // Feature snapping                                                             \n')
        f.write('       nFeatureSnapIter        10;                                                 \n')
        f.write('       implicitFeatureSnap     false;                                              \n')
        f.write('       explicitFeatureSnap     true;                                               \n')
        f.write('       multiRegionFeatureSnap  false;                                              \n')
        f.write('}                                                                                  \n')
        f.write('                                                                                   \n')
        f.write('addLayersControls                                                                  \n')
        f.write('{                                                                                  \n')
        f.write('   meshShrinker                displacementMotionSolver;                           \n')
        f.write('                                                                                   \n')
        f.write('   solver                      displacementLaplacian;                              \n')
        f.write('                                                                                   \n')
        f.write('   displacementLaplacianCoeffs                                                     \n')
        f.write('   {                                                                               \n')
        f.write('       diffusivity             quadratic inverseDistance 1(wall);                  \n')
        f.write('   }                                                                               \n')
        f.write('                                                                                   \n')
        f.write('   layers                                                                          \n')
        f.write('   {                                                                               \n')
        f.write('       wing                                                                        \n')
        f.write('       {                                                                           \n')
        f.write('           nSurfaceLayers      5;                                                  \n')
        f.write('       }                                                                           \n')
        f.write('   }                                                                               \n')
        f.write('                                                                                   \n')
        f.write('   relativeSizes               false;                                              \n')
        f.write('   expansionRatio              1.2;                                                \n')
        f.write('   firstLayerThickness         {}; \n'.format(calculateFirstLayerThickness(self.mach, 30)))
        f.write('   minThickness                1e-12;                                              \n')
        f.write('                                                                                   \n')
        f.write('   nGrow                       0;                                                  \n')
        f.write('                                                                                   \n')
        f.write('   featureAngle                150;                                                \n')
        f.write('                                                                                   \n')
        f.write('   nSmoothThickness            10;                                                 \n')
        f.write('                                                                                   \n')
        f.write('   maxFaceThicknessRatio       0.5;                                                \n')
        f.write('                                                                                   \n')
        f.write('   nBufferCellsNoExtrude       0;                                                  \n')
        f.write('                                                                                   \n')
        f.write('   nLayerIter                  50;                                                 \n')
        f.write('                                                                                   \n')
        f.write('   nRelaxIter                  5;                                                  \n')
        f.write('}                                                                                  \n')
        f.write('                                                                                   \n')
        f.write('meshQualityControls                                                                \n')
        f.write('{                                                                                  \n')
        if self.meshing == 0 or self.meshing == 1:
            f.write('   maxNonOrtho                 65;                                             \n')
            f.write('   maxBoundarySkewness         20;                                             \n')
            f.write('   maxInternalSkewness         4;                                              \n')
            f.write('   maxConcave                  80;                                             \n')
            f.write('   minFlatness                 0.5;                                            \n')
            f.write('   minVol                      1e-13;                                          \n')
            f.write('   minTetQuality               1e-13;                                          \n')
            f.write('   minArea                     -1;                                             \n')
            f.write('   minTwist                    0.05;                                           \n')
            f.write('   minDeterminant              0.001;                                          \n')
            f.write('   minFaceWeight               0.05;                                           \n')
            f.write('   minVolRatio                 0.01;                                           \n')
            f.write('   minTriangleTwist            -1;                                             \n')
        elif self.meshing == 2:
            f.write('   maxNonOrtho                 180;                                            \n')
            f.write('   maxBoundarySkewness         20;                                             \n')
            f.write('   maxInternalSkewness         4;                                              \n')
            f.write('   maxConcave                  180;                                            \n')
            f.write('   minVol                      1e-30;                                          \n')
            f.write('   minTetQuality               -1e30;                                          \n')
            f.write('   minArea                     -1;                                             \n')
            f.write('   minTwist                    -1;                                             \n')
            f.write('   minDeterminant              -1;                                             \n')
            f.write('   minFaceWeight               -1;                                             \n')
            f.write('   minVolRatio                 -1;                                             \n')
            f.write('   minTriangleTwist            -1;                                             \n')
        f.write('                                                                                   \n')
        f.write('   // Advanced settings                                                            \n')
        f.write('   nSmoothScale                4;                                                  \n')
        f.write('   errorReduction              0.75;                                               \n')
        f.write('}                                                                                  \n')
        f.write('                                                                                   \n')
        f.write('mergeTolerance 1e-6;                                                               \n')
        f.write('                                                                                   \n')
        f.write('// ************************************************************************* //    \n')
        f.close()
